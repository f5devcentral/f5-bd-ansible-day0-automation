---

  - name: Wait for BIG-IP to be ready
    f5networks.f5_modules.bigip_wait:
      delay: 5
      provider: "{{ provider }}"
    delegate_to: localhost

  - name: Configure F5 via DO with Device Certs Tagged Networks
    ansible.builtin.uri:
      url: "https://{{ ansible_host }}:{{ f5_admin_port }}/mgmt/shared/declarative-onboarding/declare"
      method: POST
      body: "{{ lookup('template','do_configure_deviceCert_tagged.j2', split_lines=False) }}"
      status_code: 202
      timeout: 300
      body_format: json
      force_basic_auth: true
      user: "{{ f5_user }}"
      password: "{{ f5_pass }}"
      validate_certs: false
    when: 
    - device_cert_base64 is defined
    - device_key_base64 is defined
    - Tagged_Networks is defined
    delegate_to: localhost
    register: do_result_cert_tagged

  - name: Configure F5 via DO with Device Certs Untagged Networks
    ansible.builtin.uri:
      url: "https://{{ ansible_host }}:{{ f5_admin_port }}/mgmt/shared/declarative-onboarding/declare"
      method: POST
      body: "{{ lookup('template','do_configure_deviceCert.j2', split_lines=False) }}"
      status_code: 202
      timeout: 300
      body_format: json
      force_basic_auth: true
      user: "{{ f5_user }}"
      password: "{{ f5_pass }}"
      validate_certs: false
    when: 
    - device_cert_base64 is defined
    - device_key_base64 is defined
    - Tagged_Networks is undefined
    delegate_to: localhost
    register: do_result_cert_untagged

  - name: Configure F5 via DO (Default Certs) Tagged Networks
    ansible.builtin.uri:
      url: "https://{{ ansible_host }}:{{ f5_admin_port }}/mgmt/shared/declarative-onboarding/declare"
      method: POST
      body: "{{ lookup('template','do_configure_tagged.j2', split_lines=False) }}"
      status_code: 202
      timeout: 300
      body_format: json
      force_basic_auth: true
      user: "{{ f5_user }}"
      password: "{{ f5_pass }}"
      validate_certs: false
    when: 
    - device_cert_base64 is undefined
    - device_key_base64 is undefined
    - Tagged_Networks is defined
    delegate_to: localhost
    register: do_result_tagged

  - name: Configure F5 via DO (Default Certs) Untagged Networks
    ansible.builtin.uri:
      url: "https://{{ ansible_host }}:{{ f5_admin_port }}/mgmt/shared/declarative-onboarding/declare"
      method: POST
      body: "{{ lookup('template','do_configure.j2', split_lines=False) }}"
      status_code: 202
      timeout: 300
      body_format: json
      force_basic_auth: true
      user: "{{ f5_user }}"
      password: "{{ f5_pass }}"
      validate_certs: false
    when: 
    - device_cert_base64 is undefined
    - device_key_base64 is undefined
    - Tagged_Networks is undefined
    delegate_to: localhost
    register: do_result_untagged

  - name: Set final DO result from cert+tagged task
    ansible.builtin.set_fact:
      final_do_result: "{{ do_result_cert_tagged }}"
    when:
      - do_result_cert_tagged is defined
      - "'json' in do_result_cert_tagged"

  - name: Set final DO result from cert+untagged task
    ansible.builtin.set_fact:
      final_do_result: "{{ do_result_cert_untagged }}"
    when:
      - final_do_result is not defined
      - do_result_cert_untagged is defined
      - "'json' in do_result_cert_untagged"

  - name: Set final DO result from tagged task
    ansible.builtin.set_fact:
      final_do_result: "{{ do_result_tagged }}"
    when:
      - final_do_result is not defined
      - do_result_tagged is defined
      - "'json' in do_result_tagged"

  - name: Set final DO result from untagged task
    ansible.builtin.set_fact:
      final_do_result: "{{ do_result_untagged }}"
    when:
      - final_do_result is not defined
      - do_result_untagged is defined
      - "'json' in do_result_untagged"

  - name: Wait for DO Task to complete
    ansible.builtin.uri:
      url: "https://{{ ansible_host }}:{{ f5_admin_port }}/mgmt/shared/declarative-onboarding/task/{{ final_do_result.json.id }}"
      method: GET
      return_content: true
      status_code: 200
      force_basic_auth: true
      user: "{{ f5_user }}"
      password: "{{ f5_pass }}"
      validate_certs: false
    register: atc_DO_status
    until: atc_DO_status is success
    retries: 30
    delay: 30
    delegate_to: localhost
